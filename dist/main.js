"use strict";

var _walkthrough = require("./walkthrough");

(function () {
  window.addEventListener('DOMContentLoaded', function (event) {
    document.getElementById('start').addEventListener('click', function () {
      var wt = new _walkthrough.Walkthrough();
      var steps = [];
      steps.push({
        title: 'example',
        desc: 'Learn how to create a Walkthrough instance and set the TutorialStage array.',
        selector: '#Example',
        fixPadding: true
      });
      steps.push({
        title: 'TutorialOptions class',
        desc: 'TutorialOptions is an optional paameter of the setTutorial function.',
        selector: '#TutorialOptions',
        fixPadding: true
      });
      steps.push({
        title: 'TutorialStage interface',
        desc: 'Where calling setTutorial you should provide a TutorialStage array.',
        selector: '#TutorialStage',
        fixPadding: true
      });
      steps.push({
        title: 'Best Practices',
        desc: 'In case you want to customize the behaviour of fix position issues you should read this section.',
        selector: '#BestPractices',
        fixPadding: true
      });
      steps.push({
        title: 'Installation',
        desc: 'Use npm to easily install this library.',
        selector: '#Installation',
        fixPadding: true
      });
      wt.setTutorial(steps).subscribe(function () {
        // alert('Walkthrough Done!');
        console.log('Walkthrough Done!');
      });
    }, false);
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ3dCIsIldhbGt0aHJvdWdoIiwic3RlcHMiLCJwdXNoIiwidGl0bGUiLCJkZXNjIiwic2VsZWN0b3IiLCJmaXhQYWRkaW5nIiwic2V0VHV0b3JpYWwiLCJzdWJzY3JpYmUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBLENBQUMsWUFBWTtBQUNUQSxFQUFBQSxNQUFNLENBQUNDLGdCQUFQLENBQXdCLGtCQUF4QixFQUE0QyxVQUFDQyxLQUFELEVBQVc7QUFFbkRDLElBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixFQUFpQ0gsZ0JBQWpDLENBQWtELE9BQWxELEVBQTJELFlBQU07QUFFN0QsVUFBTUksRUFBRSxHQUFHLElBQUlDLHdCQUFKLEVBQVg7QUFFQSxVQUFJQyxLQUFLLEdBQUcsRUFBWjtBQUVBQSxNQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBVztBQUNQQyxRQUFBQSxLQUFLLEVBQUUsU0FEQTtBQUVQQyxRQUFBQSxJQUFJLEVBQUUsNkVBRkM7QUFHUEMsUUFBQUEsUUFBUSxFQUFFLFVBSEg7QUFJUEMsUUFBQUEsVUFBVSxFQUFFO0FBSkwsT0FBWDtBQU9BTCxNQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBVztBQUNQQyxRQUFBQSxLQUFLLEVBQUUsdUJBREE7QUFFUEMsUUFBQUEsSUFBSSxFQUFFLHNFQUZDO0FBR1BDLFFBQUFBLFFBQVEsRUFBRSxrQkFISDtBQUlQQyxRQUFBQSxVQUFVLEVBQUU7QUFKTCxPQUFYO0FBT0FMLE1BQUFBLEtBQUssQ0FBQ0MsSUFBTixDQUFXO0FBQ1BDLFFBQUFBLEtBQUssRUFBRSx5QkFEQTtBQUVQQyxRQUFBQSxJQUFJLEVBQUUscUVBRkM7QUFHUEMsUUFBQUEsUUFBUSxFQUFFLGdCQUhIO0FBSVBDLFFBQUFBLFVBQVUsRUFBRTtBQUpMLE9BQVg7QUFPQUwsTUFBQUEsS0FBSyxDQUFDQyxJQUFOLENBQVc7QUFDUEMsUUFBQUEsS0FBSyxFQUFFLGdCQURBO0FBRVBDLFFBQUFBLElBQUksRUFBRSxrR0FGQztBQUdQQyxRQUFBQSxRQUFRLEVBQUUsZ0JBSEg7QUFJUEMsUUFBQUEsVUFBVSxFQUFFO0FBSkwsT0FBWDtBQU9BTCxNQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBVztBQUNQQyxRQUFBQSxLQUFLLEVBQUUsY0FEQTtBQUVQQyxRQUFBQSxJQUFJLEVBQUUseUNBRkM7QUFHUEMsUUFBQUEsUUFBUSxFQUFFLGVBSEg7QUFJUEMsUUFBQUEsVUFBVSxFQUFFO0FBSkwsT0FBWDtBQU9BUCxNQUFBQSxFQUFFLENBQUNRLFdBQUgsQ0FBZU4sS0FBZixFQUFzQk8sU0FBdEIsQ0FDSSxZQUFNO0FBQ0Y7QUFDQUMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVo7QUFDSCxPQUpMO0FBTUgsS0EvQ0QsRUErQ0csS0EvQ0g7QUFnREgsR0FsREQ7QUFtREgsQ0FwREQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWxrdGhyb3VnaCB9IGZyb20gJy4vd2Fsa3Rocm91Z2gnO1xyXG5pbXBvcnQgeyBUdXRvcmlhbFN0YWdlIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKGV2ZW50KSA9PiB7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFydCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgY29uc3Qgd3QgPSBuZXcgV2Fsa3Rocm91Z2goKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBzdGVwcyA9IFtdIGFzIEFycmF5PFR1dG9yaWFsU3RhZ2U+O1xyXG5cclxuICAgICAgICAgICAgc3RlcHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ2V4YW1wbGUnLFxyXG4gICAgICAgICAgICAgICAgZGVzYzogJ0xlYXJuIGhvdyB0byBjcmVhdGUgYSBXYWxrdGhyb3VnaCBpbnN0YW5jZSBhbmQgc2V0IHRoZSBUdXRvcmlhbFN0YWdlIGFycmF5LicsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNFeGFtcGxlJyxcclxuICAgICAgICAgICAgICAgIGZpeFBhZGRpbmc6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBzdGVwcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnVHV0b3JpYWxPcHRpb25zIGNsYXNzJyxcclxuICAgICAgICAgICAgICAgIGRlc2M6ICdUdXRvcmlhbE9wdGlvbnMgaXMgYW4gb3B0aW9uYWwgcGFhbWV0ZXIgb2YgdGhlIHNldFR1dG9yaWFsIGZ1bmN0aW9uLicsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNUdXRvcmlhbE9wdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgZml4UGFkZGluZzogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHN0ZXBzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdUdXRvcmlhbFN0YWdlIGludGVyZmFjZScsXHJcbiAgICAgICAgICAgICAgICBkZXNjOiAnV2hlcmUgY2FsbGluZyBzZXRUdXRvcmlhbCB5b3Ugc2hvdWxkIHByb3ZpZGUgYSBUdXRvcmlhbFN0YWdlIGFycmF5LicsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNUdXRvcmlhbFN0YWdlJyxcclxuICAgICAgICAgICAgICAgIGZpeFBhZGRpbmc6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBzdGVwcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnQmVzdCBQcmFjdGljZXMnLFxyXG4gICAgICAgICAgICAgICAgZGVzYzogJ0luIGNhc2UgeW91IHdhbnQgdG8gY3VzdG9taXplIHRoZSBiZWhhdmlvdXIgb2YgZml4IHBvc2l0aW9uIGlzc3VlcyB5b3Ugc2hvdWxkIHJlYWQgdGhpcyBzZWN0aW9uLicsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNCZXN0UHJhY3RpY2VzJyxcclxuICAgICAgICAgICAgICAgIGZpeFBhZGRpbmc6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBzdGVwcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSW5zdGFsbGF0aW9uJyxcclxuICAgICAgICAgICAgICAgIGRlc2M6ICdVc2UgbnBtIHRvIGVhc2lseSBpbnN0YWxsIHRoaXMgbGlicmFyeS4nLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjSW5zdGFsbGF0aW9uJyxcclxuICAgICAgICAgICAgICAgIGZpeFBhZGRpbmc6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB3dC5zZXRUdXRvcmlhbChzdGVwcykuc3Vic2NyaWJlKFxyXG4gICAgICAgICAgICAgICAgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFsZXJ0KCdXYWxrdGhyb3VnaCBEb25lIScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdXYWxrdGhyb3VnaCBEb25lIScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0sIGZhbHNlKTtcclxuICAgIH0pO1xyXG59KSgpOyJdfQ==